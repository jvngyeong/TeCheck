<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DDL.mapper.GoodsMapper">
	<sql id = "goodsColumns">
		GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
		, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
		, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND
	</sql>
	
	<insert id="goodsWrite" parameterType="goodsDTO">
		insert into goods(<include refid="goodsColumns" />)
		values (#{goodsNum}, #{goodsName}, #{goodsPrice}, #{goodsContents}
				, 0, #{goodsMainImage}, #{goodsMainStoreImage},
				<if test="goodsDetailImage != null">
				#{goodsDetailImage}, #{goodsDetailStoreImage},
				</if>
				<if test="goodsDetailImage == null">
				null, null,
				</if>
				sysdate , null, #{goodsKind})
	</insert>
	
	<select id="goodsListSelect" parameterType="string">
		select GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
		, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
		, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty 
		from (
			select ROW_NUMBER() over (order by g.goods_num desc) as rn,
					g.GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
					, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
					, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty
			from goods g left outer join goods_ipgo gi
			on g.goods_num = gi.goods_num
			<where>
				<if test="searchWord != null">
					goods_name like '%' || #{searchWord} || '%'
					or goods_kind like '%' || #{searchWord} || '%'
				</if>
			</where>
		)
		where rn between #{startRow} and #{endRow}
	</select>
	
	<select id="goodsSortedListSelect" parameterType="string">
		select GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
		, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
		, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty 
		from (
			select ROW_NUMBER() over (order by g.goods_num desc) as rn,
					g.GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
					, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
					, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty
			from goods g left outer join goods_ipgo gi
			on g.goods_num = gi.goods_num
			<where>
				<if test="searchWord != null">
					goods_name like '%' || #{searchWord} || '%'
					or goods_kind like '%' || #{searchWord} || '%'
				</if>
			</where>
		)
		where rn between #{startRow} and #{endRow}
		<if test="sortValue != null">
        	${sortValue}
    	</if>
	</select>
	
	<select id="goodsCount" parameterType="string" resultType="integer">
		select count(*) from goods
		<where>
			<if test="searchWord != null">
				goods_name like '%' || #{searchWord} || '%'
				or goods_num like '%' || #{searchWord} || '%'
			</if>
		</where>
	</select>
	
	<select id = "goodsSelectOne">
		select g.GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
					, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
					, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty
		from goods g left outer join goods_ipgo gi
		on g.goods_num = gi.goods_num
		where g.goods_num = #{goodsNum}
	</select>
	<update id= "goodsUpdate" parameterType="goodsDTO">
		update goods
		<trim prefix="set" suffixOverrides=",">
			 GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice}
			,GOODS_CONTENTS = #{goodsContents}
		    ,GOODS_UPDATE_DATE = sysdate
		    ,GOODS_KIND = #{goodsKind}
		    <if test="goodsMainImage != null">
			    ,GOODS_MAIN_IMAGE = #{goodsMainImage}
			    ,GOODS_MAIN_STORE_IMAGE = #{goodsMainStoreImage}
		    </if>
		    <if test="goodsDetailImage != null ">
			    ,GOODS_DETAIL_IMAGE = #{goodsDetailImage}
			    ,GOODS_DETAIL_STORE_IMAGE = #{goodsDetailStoreImage}
		    </if>
		</trim>
		where goods_num = #{goodsNum}
	</update>
	<delete id= "goodsDelete">
		delete from goods where goods_num = #{goodsNum}
	</delete>
	
	<update id="goodsVisitCountUpdate" parameterType="string">
		update goods
		set visit_count = visit_count + 1
		where goods_num = #{goodsNum}
	</update>
	
	<select id="goodsCategory" resultType="goodsDTO">
		select count(goods_kind) as goodsQty, goods_kind from goods group by goods_kind
	</select>
	
	<select id="goodsAllSelect" resultType="goodsDTO">
		select ROW_NUMBER() over (order by g.goods_num desc) as rn,
					g.GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT
					, GOODS_MAIN_IMAGE ,GOODS_MAIN_STORE_IMAGE, GOODS_DETAIL_IMAGE
					, GOODS_DETAIL_STORE_IMAGE, GOODS_REGIST, GOODS_UPDATE_DATE, GOODS_KIND, ipgo_qty
			from goods g left outer join goods_ipgo gi
			on g.goods_num = gi.goods_num
	</select>
	
	<select id="indexSelect" resultType="goodsDTO">
		select * from goods
		order by visit_count desc
	</select>
</mapper>